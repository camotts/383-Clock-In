@model ClockIn_ClockOut.Models.User

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
     <input  id="RoleText" style="display:none;" type="text" value=@Model.ID>
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="form-group">
                @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2", @id="roleLable", @value=@Model.ID})
                <div class="col-md-10">
                    @Html.DropDownList("RoleID")
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-sm" })
</div>
        <script type="text/javascript">
    $(document).ready(function () {

        var select = $("#RoleID");
        var user;
        user = document.getElementById('RoleText').value;
        console.log(document.getElementById('RoleText').value);
        var isAdmin = $.ajax({
            type: 'Get',
            url: '/User/isAdminThroughID',
            data: {
                "id" : user
                },
            cache: false
        });

    isAdmin.done(function (result) {
        console.log(result);
        if (result == "False") {
            console.log("Inside false");
            document.getElementById("RoleID").selectedIndex = 0;
        }
        else {
            console.log("Inside true");
            document.getElementById("RoleID").selectedIndex = 1;
        }
    });

    isAdmin.fail(function (xhr, ajaxOptions, thrownError) {
        console.log(thrownError);
        console.log(xhr);
    });
    });
        </script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
